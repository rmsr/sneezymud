# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import sneezy.mud.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Mob',
            fields=[
                ('vnum', models.IntegerField(serialize=False, primary_key=True)),
                ('owner', models.CharField(max_length=80, blank=True)),
                ('name', models.CharField(max_length=127)),
                ('short_desc', models.CharField(max_length=127)),
                ('long_desc', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('actions', models.IntegerField()),
                ('affects', models.IntegerField()),
                ('faction', models.IntegerField()),
                ('fact_perc', models.IntegerField()),
                ('letter', models.CharField(max_length=1)),
                ('attacks', models.FloatField()),
                ('mob_class', models.IntegerField(db_column=b'class')),
                ('level', models.IntegerField()),
                ('tohit', models.IntegerField()),
                ('ac', models.FloatField()),
                ('hpbonus', models.FloatField()),
                ('damage_level', models.FloatField()),
                ('damage_precision', models.IntegerField()),
                ('gold', models.IntegerField()),
                ('race', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('height', models.IntegerField()),
                ('str', models.IntegerField()),
                ('bra', models.IntegerField()),
                ('con', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('agi', models.IntegerField()),
                ('intel', models.IntegerField()),
                ('wis', models.IntegerField()),
                ('foc', models.IntegerField()),
                ('per', models.IntegerField()),
                ('cha', models.IntegerField()),
                ('kar', models.IntegerField()),
                ('spe', models.IntegerField()),
                ('pos', models.IntegerField()),
                ('def_position', models.IntegerField()),
                ('sex', models.IntegerField()),
                ('spec_proc', models.IntegerField()),
                ('skin', models.IntegerField()),
                ('vision', models.IntegerField()),
                ('can_be_seen', models.IntegerField()),
                ('max_exist', models.IntegerField()),
                ('local_sound', models.CharField(max_length=255, blank=True)),
                ('adjacent_sound', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'db_table': 'mob',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MobExtra',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('owner', models.CharField(max_length=80, null=True, blank=True)),
                ('keyword', sneezy.mud.fields.FixedCharField(max_length=32)),
                ('description', sneezy.mud.fields.FixedCharField(max_length=255, null=True, blank=True)),
                ('vnum', models.ForeignKey(db_column=b'vnum', default=0, to='immortal.Mob')),
            ],
            options={
                'db_table': 'mob_extra',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MobImm',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('owner', models.CharField(max_length=80, blank=True)),
                ('type', models.IntegerField()),
                ('amt', models.IntegerField(null=True, blank=True)),
                ('vnum', models.ForeignKey(db_column=b'vnum', default=0, to='immortal.Mob')),
            ],
            options={
                'db_table': 'mob_imm',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Mobresponses',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('owner', models.CharField(max_length=80, blank=True)),
                ('response', models.TextField()),
                ('vnum', models.ForeignKey(to='immortal.Mob')),
            ],
            options={
                'db_table': 'mobresponses',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Obj',
            fields=[
                ('vnum', models.IntegerField(serialize=False, primary_key=True)),
                ('owner', models.CharField(max_length=80, blank=True)),
                ('name', models.CharField(max_length=127)),
                ('short_desc', models.CharField(max_length=127)),
                ('long_desc', models.CharField(max_length=255)),
                ('action_desc', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('action_flag', models.IntegerField()),
                ('wear_flag', models.IntegerField()),
                ('val0', models.IntegerField()),
                ('val1', models.IntegerField()),
                ('val2', models.IntegerField()),
                ('val3', models.IntegerField()),
                ('weight', models.FloatField()),
                ('price', models.IntegerField()),
                ('can_be_seen', models.IntegerField()),
                ('spec_proc', models.IntegerField()),
                ('max_exist', models.IntegerField()),
                ('max_struct', models.IntegerField()),
                ('cur_struct', models.IntegerField()),
                ('decay', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('material', models.IntegerField()),
            ],
            options={
                'db_table': 'obj',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Objaffect',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('owner', models.CharField(max_length=80, blank=True)),
                ('type', models.IntegerField()),
                ('mod1', models.IntegerField()),
                ('mod2', models.IntegerField()),
                ('vnum', models.ForeignKey(to='immortal.Obj')),
            ],
            options={
                'db_table': 'objaffect',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Objextra',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('owner', models.CharField(max_length=80, blank=True)),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField()),
                ('vnum', models.ForeignKey(to='immortal.Obj')),
            ],
            options={
                'db_table': 'objextra',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('vnum', models.IntegerField(serialize=False, primary_key=True)),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('z', models.IntegerField()),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField()),
                ('zone', models.IntegerField()),
                ('room_flag', models.IntegerField()),
                ('sector', models.IntegerField()),
                ('teletime', models.IntegerField()),
                ('teletarg', models.IntegerField()),
                ('telelook', models.IntegerField()),
                ('river_speed', models.IntegerField()),
                ('river_dir', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('height', models.IntegerField()),
                ('spec', models.IntegerField()),
                ('owner', models.CharField(max_length=32, blank=True)),
                ('block', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'room',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Roomexit',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('direction', models.IntegerField()),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField()),
                ('type', models.IntegerField()),
                ('condition_flag', models.IntegerField()),
                ('lock_difficulty', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('key_num', models.IntegerField()),
                ('destination', models.IntegerField()),
                ('owner', models.CharField(max_length=32, blank=True)),
                ('block', models.IntegerField(null=True, blank=True)),
                ('vnum', models.ForeignKey(to='immortal.Room')),
            ],
            options={
                'db_table': 'roomexit',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Roomextra',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('owner', models.CharField(max_length=32, blank=True)),
                ('block', models.IntegerField(null=True, blank=True)),
                ('vnum', models.ForeignKey(to='immortal.Room')),
            ],
            options={
                'db_table': 'roomextra',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='mobimm',
            unique_together=set([('vnum', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='mobextra',
            unique_together=set([('vnum', 'keyword')]),
        ),
    ]
